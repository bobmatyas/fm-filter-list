{"version":3,"sources":["images/bg-header-mobile.svg","images/bg-header-desktop.svg","JobProvider.js","components/Header.js","components/Card-header-highlights.js","components/Card-title.js","components/Card-details.js","components/Card-header.js","components/Card-filters.js","components/Card.js","components/Filter-Menu.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","JobsContext","createContext","useJobs","useContext","JobProvider","children","useState","data","jobs","filters","setFilters","filteredJobs","filter","role","level","tools","languages","length","tags","push","every","includes","Provider","value","addFilter","removeFilter","f","clearFilters","HeaderStyled","styled","header","MobileBg","DesktopBg","Header","ListStyled","ul","New","li","Featured","Highlights","props","featured","PositionTitle","h3","Details","position","ListItem","postedAt","location","CompanyInfoHolder","div","CompanyHeader","CompanyStyled","h2","CompanyDetails","CompanyLogo","img","Company","src","logo","alt","company","new","contract","Filter","Filters","map","tag","i","key","onClick","CardStyled","CompanyInfo","MobileSeparator","hr","Card","MenuHolder","Remove","span","Clear","a","FilterMenu","aria-label","MainStyled","main","Main","job","id","App","className","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bcd8cd0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-header-mobile.6b5ff5a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-header-desktop.6e2f7196.svg\";","import React, { createContext, useState, useContext } from \"react\";\nimport data from './data/data.json';\n\nconst JobsContext = createContext();\n\nexport const useJobs = () => useContext(JobsContext);\n\nexport default function JobProvider ({ children }) {\n\n    const [jobs, setJobs] = useState(data);\n\n    const [filters, setFilters ] = useState([]);\n\n    const addFilter = (filter) => {\n        if  ( filters.includes(filter) ) return;\n        setFilters([...filters, filter])\n    }\n\n    const removeFilter = (filter) => {\n        setFilters(filters.filter((f) => f !== filter ));\n    } \n\n    const clearFilters = () => {\n        setFilters([]);\n    } \n\n    const filterFunction = ({role, level, tools, languages}) => {\n        if ( filters.length === 0 ){\n          return true;\n        }\n    \n        const tags = [role, level];\n    \n        if (tools ){\n          tags.push(...tools);\n        }\n    \n        if (languages ) {\n          tags.push(...languages);\n        }\n    \n        return filters.every(filter => tags.includes(filter));\n    \n    } \n\n    const filteredJobs = jobs.filter(filterFunction);\n\n    return (\n        <JobsContext.Provider value={{ addFilter, removeFilter, clearFilters, filters, filteredJobs }} >\n            {children}\n        </JobsContext.Provider>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport MobileBg from '../images/bg-header-mobile.svg';\nimport DesktopBg from '../images/bg-header-desktop.svg';\n\nconst HeaderStyled = styled.header`\n    background-color: hsl(180, 29%, 50%);\n    background-image: url(${MobileBg});\n    background-size: cover;\n    background-repeat: no-repeat;\n    height: 155px;\n    margin: 0;\n    padding: 0;\n\n    @media (min-width: 600px) {\n      background-image: url(${DesktopBg});\n    }\n`;\n\n\nfunction Header() {\n  return (\n    <HeaderStyled />\n    );\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListStyled = styled.ul`\n    align-items: center;\n    display: flex;\n    color: hsl(180, 8%, 52%);\n    font-size: 12px;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n`;\n\nconst New = styled.li`\n    background-color: hsl(180, 29%, 50%);  \n    border-radius: 25px;\n    color: #fff;\n    font-size: 10px;\n    font-weight: 700;\n    margin: 0 5px;\n    padding: 5px 10px 2px 10px;\n    text-transform: uppercase;\n`;\n\nconst Featured = styled.li`\n    background-color: hsl(180, 14%, 20%); \n    border-radius: 25px;\n    color: #fff;\n    font-size: 10px;\n    font-weight: 700;\n    margin: 0 5px;\n    padding: 5px 10px 2px 10px;\n    text-transform: uppercase;\n`;\n\nfunction Highlights(props) {\n    return (\n    <ListStyled>\n        {props.featured ? \n            <New>New</New> : ''\n        }   \n        {props.featured ? \n            <Featured>Featured</Featured> : ''\n        }       \n    </ListStyled>\n    );\n}\n\nexport default Highlights;","import React from 'react';\nimport styled from 'styled-components';\n\nconst PositionTitle = styled.h3`\n    color: hsl(180, 14%, 20%);\n    font-size: 15px;\n`;\n\n\nfunction Details(props) {\n  return (\n    <PositionTitle>\n        {props.position}\n    </PositionTitle>\n    );\n}\n\nexport default Details;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListStyled = styled.ul`\n    display: flex;\n    color: hsl(180, 8%, 52%);\n    font-size: 12px;\n    margin: 0;\n    padding: 0;\n\n    li:first-of-type {\n        list-style-type: none;\n        margin-left: 0;\n        padding-left: 0;\n    }\n`;\n\nconst ListItem = styled.li`\n    margin: 0 10px;\n    padding: 0 15px;\n`;\n\n\nfunction Details(props) {\n  return (\n    <ListStyled>\n        <ListItem>{props.postedAt}</ListItem>\n        <ListItem>{props.position}</ListItem>\n        <ListItem>{props.location}</ListItem>\n    </ListStyled>\n    );\n}\n\nexport default Details;","import React from 'react';\nimport styled from 'styled-components';\nimport Highlights from './Card-header-highlights';\nimport Title from './Card-title';\nimport Details from './Card-details';\n\nconst CompanyInfoHolder = styled.div`\n    align-items: center;\n    display: flex;\n\n    @media (max-width: 767px) {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n`;\n\nconst CompanyHeader = styled.div`\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst CompanyStyled = styled.h2`\n    color: hsl(180, 29%, 50%);\n    font-size: 12px;\n    margin: 0;\n`;\n\nconst CompanyDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n    \n    @media (min-width: 768px) {\n        margin-left: 25px;\n    }\n`;\n\nconst CompanyLogo = styled.img`\n    @media (max-width: 767px) {\n        margin-top: -50px;\n        margin-bottom: 15px;\n        max-width: 50px;\n\n    }\n`;\n\n\nfunction Company(props) {\n  return (\n    <CompanyInfoHolder>\n        <CompanyLogo src={props.logo} alt={props.company} />\n\n    <CompanyDetails>\n    <CompanyHeader>\n        \n        <CompanyStyled>\n            {props.company}\n        </CompanyStyled>\n        <Highlights\n            new={props.new}\n            featured={props.featured}\n        />\n    </CompanyHeader>\n    <Title position={props.position} />\n              <Details \n                location={props.location}\n                position={props.contract} \n                postedAt={props.postedAt}\n              />\n    </CompanyDetails>\n\n    </CompanyInfoHolder>\n);\n}\n\nexport default Company;","import React from 'react';\nimport styled from 'styled-components';\nimport { useJobs } from '../JobProvider';\n\nconst ListStyled = styled.ul`\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    font-size: 12px;\n    list-style-type: none;\n    margin: 20px 0;\n    padding: 0;\n`;\n\nconst Filter = styled.li`\n    background-color: hsl(180, 31%, 95%);  \n    border-radius: 5px;\n    color: hsl(180, 29%, 50%);\n    font-size: 12px;\n    font-weight: 700;\n    margin: 10px 10px 0 0;\n    padding: 10px;\n\n    :hover {\n        background-color: hsl(180, 29%, 50%);\n        color: #fff; \n        cursor: pointer;\n    }\n`;\n\n\nfunction Filters({ tags }) {\n\n  const { addFilter } = useJobs();\n\n  return (\n    <ListStyled>\n        {tags.map((tag, i) => (\n            <Filter key={i}\n                onClick={()=> addFilter(tag)}>{tag}</Filter>\n        ))\n        }\n    </ListStyled>\n    );\n}\n\nexport default Filters;","import React from 'react';\nimport styled from 'styled-components';\nimport Company from './Card-header';\n\nimport Filters from './Card-filters';\n\n\n\nconst CardStyled = styled.div`\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0px 10px 24px -3px hsla(180, 14%, 20%, 0.1);\n    padding: 25px; \n    margin: 50px 10px;\n\n\n    @media (min-width: 768px) {\n      align-items: center; \n      display: flex;\n      justify-content: space-between;\n      margin: 2.5% auto;\n      max-width: 1000px;\n    }\n  `;\n\nconst CompanyInfo = styled.div`\n    display: flex; \n    align-items: center;\n`; \n\nconst MobileSeparator = styled.hr`\n    color: transparent;\n    border-bottom: 2px solid #eee;\n    padding-top: 20px;\n\n    @media (min-width: 768px) {\n      display: none;\n    }\n\n`;\n\nconst CompanyDetails = styled.div`\n`;\n\nfunction Card(props) {\n\n  const tags = [props.role, props.level, ...props.languages, ...props.tools];\n\n  return (\n    <CardStyled>\n        <CompanyInfo>\n            <CompanyDetails>\n              <Company \n                logo={props.logo}\n                company={props.company} \n                contract={props.contract}\n                new={props.new}\n                featured={props.featured}\n                position={props.position}\n                location={props.location}\n                postedAt={props.postedAt}\n              />\n            </CompanyDetails>\n        </CompanyInfo>\n        <MobileSeparator/>\n      <Filters\n        tags={tags}\n      />\n    </CardStyled>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport styled from 'styled-components';\nimport { useJobs } from '../JobProvider';\n\nconst MenuHolder = styled.div`\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0px 10px 24px -3px hsla(180, 14%, 20%, 0.1);\n    padding: 5px 25px; \n    margin: -30px auto 0 auto;\n    max-width: 1000px;\n    align-items: center; \n    display: flex;\n    justify-content: space-between;\n  `;\n\nconst ListStyled = styled.ul`\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    font-size: 12px;\n    list-style-type: none;\n    margin: 10px 0;\n    padding: 0;\n`;\n\nconst Filter = styled.li`\n    background-color: hsl(180, 31%, 95%);  \n    border-radius: 5px;\n    color: hsl(180, 29%, 50%);\n    font-size: 12px;\n    font-weight: 700;\n    margin: 5px 10px 0 0;\n    padding: 10px 0 10px 10px;\n`;\n\nconst Remove = styled.span`\n    background-color: hsl(180, 29%, 50%);  \n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    color: #fff;\n    margin-left: 10px;\n    padding: 10px 10px 10px 5px;\n\n    :hover {\n        background-color: hsl(180, 14%, 20%); \n        cursor: pointer;\n    }\n`;\n\nconst Clear = styled.a`\n    color: hsl(180, 29%, 50%);\n    font-size: 12px;\n    font-weight: 700;\n\n    :hover {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`;\n\nfunction FilterMenu(props) {\n\n  const { filters, removeFilter, clearFilters } = useJobs();\n  \n  return (\n    <MenuHolder>\n    <ListStyled>\n        {filters.map((tag, i) => (\n            <Filter key={i}> \n                {tag} \n                <Remove \n                    aria-label=\"Close\"\n                    onClick={()=> removeFilter(tag)}\n                > X\n                </Remove>\n            </Filter>\n        ))\n        }\n    </ListStyled>       \n\n        <Clear onClick={()=> clearFilters()}>Clear</Clear>\n    </MenuHolder>\n    );\n}\n\nexport default FilterMenu;","import React from 'react';\nimport styled from 'styled-components'\nimport Card from './Card';\nimport FilterMenu from './Filter-Menu'\nimport { useJobs } from '../JobProvider';\n\n\nconst MainStyled = styled.main`\n    @media (min-width: 768px) {\n        padding: 0 2.5%;\n    }\n`;\n\n\nfunction Main() {\n    \n    const { filteredJobs, filters } = useJobs();\n    \n    return (\n        <MainStyled>\n            { filters.length >= 1 ? <FilterMenu /> : '' }\n\n            {filteredJobs.map((job, i) => (\n                <Card\n                    key={job.id}\n                    company={job.company}\n                    new={job.new}\n                    featured={job.featured}\n                    logo= {job.logo}\n                    contract={job.contract}\n                    position={job.position}\n                    postedAt={job.postedAt}\n                    location={job.location}\n                    role={job.role}\n                    level={job.level}\n                    tools={job.tools}\n                    languages={job.languages}\n                />\n            ))}\n        </MainStyled>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Main from './components/Main';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JobProvider from \"./JobProvider\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <JobProvider>\n    <App />\n    </JobProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}